library(httr)
library(jsonlite)
library(dplyr)
library(lubridate)

get_token <- function() {
  response <- POST("https://api.afl.com.au/cfs/afl/WMCTok")
  token <- content(response)$token
  return(token)
}

access_api <- function(url) {
  token <- get_token()
  response <- GET(url = url, add_headers("x-media-mis-token" = token))
  content <- response %>%
    content(as = "text", encoding = "UTF-8") %>%
    fromJSON(flatten = TRUE)
  return(content)
}


get_round_games <- function(season, round) {
  round <- ifelse(round < 10, paste0("0", round), as.character(round))
  url <- paste0("https://api.afl.com.au/cfs/afl/fixturesAndResults/season/CD_S", season, "014/round/CD_R", season, "014", round)
  games <- access_api(url)[[5]]
  if (length(games) > 0) {
    games <- games %>% filter(status == "CONCLUDED")
    if (nrow(games) > 0) {
      games <- games %>% dplyr::select(matchId, utcStartTime, roundNumber, venue.name, homeTeam.teamName, awayTeam.teamName, homeTeamScore.totalScore, awayTeamScore.totalScore)
      games$date <- as.Date(games$utcStartTime)
      games$season <- year(games$utcStartTime)
      return(games)
    }
  }
  return(NULL)
}

get_season_games <- function(season) {
  games <- get_round_games(season, 1)
  for (i in 2:30) {
    new_games <- get_round_games(season, i)
    games <- bind_rows(games, new_games)
  }
  return(games)
}

get_players <- function() {
  url <- "https://api.afl.com.au/cfs/afl/players"
  players <- access_api(url)[[5]]
  players <- players %>% dplyr::select(playerId, playerName.givenName, playerName.surname, team.teamName)
  return(players)
}


teamIds <- tibble(
  chainTeamName = c("Adelaide Crows", "Brisbane Lions", "Carlton", "Collingwood", "Essendon",
                    "Fremantle", "Geelong Cats", "Gold Coast SUNS", "GWS GIANTS", "Hawthorn",
                    "Melbourne", "North Melbourne", "Port Adelaide", "Richmond", "St Kilda",
                    "Sydney Swans", "Western Bulldogs", "West Coast Eagles"),
  chainTeamId = c("CD_T10", "CD_T20", "CD_T30", "CD_T40", "CD_T50",
                  "CD_T60", "CD_T70", "CD_T1000", "CD_T1010", "CD_T80",
                  "CD_T90", "CD_T100", "CD_T110", "CD_T120", "CD_T130",
                  "CD_T160", "CD_T140", "CD_T150")
)


get_game_chains <- function(match_id) {
  url <- paste0("https://sapi.afl.com.au/afl/matchPlays/", match_id)
  chains_t1 <- access_api(url)
  chains_t2 <- chains_t1[[8]]
  chains <- get_single_chain(chains_t2, 1)
  chains$chainTeamId <- chains_t1$matchChains[1, ]$teamId
  for (i in 2:nrow(chains_t2)) {
    new <- get_single_chain(chains_t2, i)
    new$chainTeamId <- chains_t1$matchChains[i, ]$teamId
    chains <- bind_rows(chains, new)
  }
  chains$matchId <- chains_t1$matchId
  chains$venueWidth <- chains_t1$venueWidth
  chains$venueLength <- chains_t1$venueLength
  chains$homeTeamDirectionQtr1 <- chains_t1$homeTeamDirectionQtr1
  return(chains)
}

get_single_chain <- function(chains_t2, chain_number) {
  chains_t3 <- chains_t2[[chain_number, 6]]
  if (length(chains_t3) > 0) {
    chains_t3$finalState <- chains_t2$finalState[chain_number]
    chains_t3$initialState <- chains_t2$initialState[chain_number]
    chains_t3$period <- chains_t2$period[chain_number]
    chains_t3$chain_number <- chain_number
    return(chains_t3)
  }
  return(NULL)
}

get_many_game_chains <- function(games) {
  pb <- txtProgressBar(max = nrow(games), style = 3, width = 50, char = ">")
  chains <- get_game_chains(games[[1,1]])
  setTxtProgressBar(pb, 1)
  if (nrow(games) > 1) {
    for (i in 2:nrow(games)) {
      new <- get_game_chains(games[[i,1]])
      chains <- bind_rows(chains, new)
      setTxtProgressBar(pb, i)
    }
  }
  return(chains)
}


get_match_chains <- function(season = year(Sys.Date()), round = NA) {
  if (season < 2021) {
    stop("Match chain data is not available for seasons prior to 2021.")
  }
  if (is.na(round)) {
    cat("No round value supplied. Function will scrape all rounds in the season. This may take some time.\n")
    games <- get_season_games(season)
  } else {
    games <- get_round_games(season, round)
  }
  if (length(games) == 0) {
    stop("No data available for the season or round selected.")
  }
  cat("\nScraping match chains...\n\n")
  chains <- get_many_game_chains(games)
  players <- get_players()
  chains <- inner_join(chains, games, by = "matchId")
  chains <- left_join(chains, players, by = "playerId")
  chains <- left_join(chains, teamIds, by = "chainTeamId")
  chains <- chains %>%
    select(season, roundNumber, homeTeam.teamName:date, venue.name, venueWidth:homeTeamDirectionQtr1, displayOrder, chain_number, chainTeamName, initialState, finalState, period, periodSeconds, playerName.givenName:team.teamName, description, disposal:y) %>%
    mutate(date = as.character(date))
  cat("\n\nSuccess!\n\n")
  return(chains)
}

save_match_chains_to_csv <- function(season, round) {
  # Get the match chains for the specified season and round
  data <- get_match_chains(season, round)
  
  # Construct the filename using the season and round number
  filename <- paste0("match_chains_", season, "_round_", round, ".csv")
  
  # Save the data to a CSV file
  write.csv(data, filename, row.names = FALSE)
  
  # Optionally, return the filename or the data for further use
  return(filename)
}


process_rounds <- function(season, start_round, end_round) {
  for (round in start_round:end_round) {
    # Call the function to save data for each round
    save_match_chains_to_csv(season, round)
    cat("Saved CSV for round", round, "\n") # Optional: print progress
  }
}

process_rounds(2021,1,28)



